{"version":3,"sources":["constants/userConstants.js","constants/taskConstants.js","store.js","reducers/userReducers.js","reducers/taskReducers.js","components/Loader.js","components/Message.js","screens/Login.js","actions/userActions.js","screens/Register.js","actions/taskActions.js","components/CardComponent.js","screens/List.js","screens/Create.js","screens/Update.js","components/Footer.js","App.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","TASK_LIST_REQUEST","TASK_LIST_SUCCESS","TASK_LIST_FAIL","TASK_DETAILS_REQUEST","TASK_DETAILS_SUCCESS","TASK_DETAILS_FAIL","TASK_DETAILS_RESET","TASK_CREATE_REQUEST","TASK_CREATE_SUCCESS","TASK_CREATE_FAIL","TASK_CREATE_RESET","TASK_UPDATE_REQUEST","TASK_UPDATE_SUCCESS","TASK_UPDATE_FAIL","TASK_UPDATE_RESET","TASK_DELETE_REQUEST","TASK_DELETE_SUCCESS","TASK_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","taskList","tasks","taskDetails","task","taskCreate","success","taskUpdate","taskDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Loader","Spinner","animation","role","style","height","width","margin","display","className","Message","variant","children","Alert","Login","history","useState","email","setEmail","password","setPassword","useSelector","dispatch","useDispatch","useEffect","push","to","Form","onSubmit","e","preventDefault","a","config","headers","axios","post","data","setItem","stringify","response","detail","message","login","Group","controlId","textAlign","Label","Control","required","placeholder","value","onChange","target","Button","Register","name","setName","confirmPassword","setConfirmPassword","setMessage","register","id","getState","Authorization","token","get","updateTask","title","description","isCompleted","put","CardComponent","myId","myColor","myTitle","myDescription","useHistory","deleteHandler","delete","Col","Card","borderTop","opacity","Body","Title","textDecoration","color","cursor","onClick","Text","Footer","List","colors","successCreate","successUpdate","successDelete","removeItem","length","map","index","Create","setTitle","setDescription","username","createTask","as","rows","Update","match","setIsCompleted","taskDetailsAction","params","alert","Check","label","checked","Date","getFullYear","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.546ad659.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'","export const TASK_LIST_REQUEST = 'TASK_LIST_REQUEST'\r\nexport const TASK_LIST_SUCCESS = 'TASK_LIST_SUCCESS'\r\nexport const TASK_LIST_FAIL = 'TASK_LIST_FAIL'\r\n\r\nexport const TASK_DETAILS_REQUEST = 'TASK_DETAILS_REQUEST'\r\nexport const TASK_DETAILS_SUCCESS = 'TASK_DETAILS_SUCCESS'\r\nexport const TASK_DETAILS_FAIL = 'TASK_DETAILS_FAIL'\r\nexport const TASK_DETAILS_RESET = 'TASK_DETAILS_RESET'\r\n\r\nexport const TASK_CREATE_REQUEST = 'TASK_CREATE_REQUEST'\r\nexport const TASK_CREATE_SUCCESS = 'TASK_CREATE_SUCCESS'\r\nexport const TASK_CREATE_FAIL = 'TASK_CREATE_FAIL'\r\nexport const TASK_CREATE_RESET = 'TASK_CREATE_RESET'\r\n\r\nexport const TASK_UPDATE_REQUEST = 'TASK_UPDATE_REQUEST'\r\nexport const TASK_UPDATE_SUCCESS = 'TASK_UPDATE_SUCCESS'\r\nexport const TASK_UPDATE_FAIL = 'TASK_UPDATE_FAIL'\r\nexport const TASK_UPDATE_RESET = 'TASK_UPDATE_RESET'\r\n\r\nexport const TASK_DELETE_REQUEST = 'TASK_DELETE_REQUEST'\r\nexport const TASK_DELETE_SUCCESS = 'TASK_DELETE_SUCCESS'\r\nexport const TASK_DELETE_FAIL = 'TASK_DELETE_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    taskListReducer,\r\n    taskDetailsReducer,\r\n    taskCreateReducer,\r\n    taskUpdateReducer,\r\n    taskDeleteReducer,\r\n} from './reducers/taskReducers'\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    taskList: taskListReducer,\r\n    taskDetails: taskDetailsReducer,\r\n    taskCreate: taskCreateReducer,\r\n    taskUpdate: taskUpdateReducer,\r\n    taskDelete: taskDeleteReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    TASK_LIST_REQUEST,\r\n    TASK_LIST_SUCCESS,\r\n    TASK_LIST_FAIL,\r\n\r\n    TASK_DETAILS_REQUEST,\r\n    TASK_DETAILS_SUCCESS,\r\n    TASK_DETAILS_FAIL,\r\n    TASK_DETAILS_RESET,\r\n\r\n    TASK_CREATE_REQUEST,\r\n    TASK_CREATE_SUCCESS,\r\n    TASK_CREATE_FAIL,\r\n    TASK_CREATE_RESET,\r\n\r\n    TASK_UPDATE_REQUEST,\r\n    TASK_UPDATE_SUCCESS,\r\n    TASK_UPDATE_FAIL,\r\n    TASK_UPDATE_RESET,\r\n\r\n    TASK_DELETE_REQUEST,\r\n    TASK_DELETE_SUCCESS,\r\n    TASK_DELETE_FAIL,\r\n} from '../constants/taskConstants';\r\n\r\nexport const taskListReducer = (state = { tasks: [] }, action) => {\r\n    switch (action.type) {\r\n        case TASK_LIST_REQUEST:\r\n            return { \r\n                loading: true, \r\n                tasks: [] \r\n            }\r\n\r\n        case TASK_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                tasks: action.payload,\r\n            }\r\n\r\n        case TASK_LIST_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const taskDetailsReducer = (state = { task: {} }, action) => {\r\n    switch (action.type) {\r\n        case TASK_DETAILS_REQUEST:\r\n            return { \r\n                loading: true, \r\n                ...state\r\n            }\r\n\r\n        case TASK_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                task: action.payload,\r\n            }\r\n\r\n        case TASK_DETAILS_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n\r\n        case TASK_DETAILS_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const taskCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case TASK_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case TASK_CREATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true, \r\n            }\r\n\r\n        case TASK_CREATE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n\r\n        case TASK_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const taskUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case TASK_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case TASK_UPDATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true, \r\n            }\r\n\r\n        case TASK_UPDATE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n\r\n        case TASK_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const taskDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case TASK_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case TASK_DELETE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true, \r\n            }\r\n\r\n        case TASK_DELETE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\" ></span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { login } from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/tasks')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n        <header className=\"text-center py-5\">\r\n            <h1 className=\"pb-5\">TODO LIST</h1>\r\n            <Link className=\"btn createTodoBtn\" to=\"/register\">\r\n                Register\r\n            </Link>\r\n        </header>\r\n        <center>\r\n            <div className='createForm my-5'>\r\n                {error && <div className='container my-5'><Message variant='danger'>{error}</Message></div>}\r\n                {loading && <div className='container my-5'><Loader /></div>}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <h1 className='mb-5'>Sign in</h1>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label className='text-left'>Email address</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </center>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ \r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/user/login/',\r\n            {'username': email, 'password': password},\r\n            config\r\n        )\r\n        \r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        \r\n        dispatch({ \r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ \r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/user/register/',\r\n            {'name': name, 'email': email, 'password': password},\r\n            config\r\n        )\r\n        \r\n        dispatch({ \r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        \r\n        dispatch({ \r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { register } from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading} = userRegister\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/tasks')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n        <header className=\"text-center py-5\">\r\n            <h1 className=\"pb-5\">TODO LIST</h1>\r\n            <Link className=\"btn createTodoBtn\" to=\"/\">\r\n                Login\r\n            </Link>\r\n        </header>\r\n        <center>\r\n            <div className='createForm my-5'>\r\n                {message && <div className='container mt-5'><Message variant='danger'>{message}</Message></div>}\r\n                {error && <div className='container my-5'><Message variant='danger'>{error}</Message></div>}\r\n                {loading && <div className='container my-5'><Loader /></div>}\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n                    <h1 className='mb-5'>Sign up</h1>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label className='text-left'>Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"text\" \r\n                            placeholder=\"Enter Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label className='text-left'>Email address</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword2\" style={{ textAlign: 'left' }}>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\" \r\n                            placeholder=\"Confirm Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </center>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import axios from 'axios'\r\nimport {\r\n    TASK_LIST_REQUEST,\r\n    TASK_LIST_SUCCESS,\r\n    TASK_LIST_FAIL,\r\n\r\n    TASK_DETAILS_REQUEST,\r\n    TASK_DETAILS_SUCCESS,\r\n    TASK_DETAILS_FAIL,\r\n\r\n    TASK_CREATE_REQUEST,\r\n    TASK_CREATE_SUCCESS,\r\n    TASK_CREATE_FAIL,\r\n\r\n    TASK_UPDATE_REQUEST,\r\n    TASK_UPDATE_SUCCESS,\r\n    TASK_UPDATE_FAIL,\r\n\r\n    TASK_DELETE_REQUEST,\r\n    TASK_DELETE_SUCCESS,\r\n    TASK_DELETE_FAIL,\r\n} from '../constants/taskConstants';\r\n\r\nexport const listTasks = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: TASK_LIST_REQUEST })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/task-list/`, config)\r\n\r\n        dispatch({ \r\n            type: TASK_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: TASK_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const taskDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: TASK_DETAILS_REQUEST })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/task-details/${id}`, config)\r\n\r\n        dispatch({ \r\n            type: TASK_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: TASK_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createTask = (title, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: TASK_CREATE_REQUEST })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/task-create/`,\r\n            {\r\n                \"user\": userInfo.username,\r\n                \"title\": title,\r\n                \"description\": description\r\n            }, \r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: TASK_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: TASK_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateTask = (id, title, description, isCompleted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: TASK_UPDATE_REQUEST })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/task-update/${id}/`,\r\n            {\r\n                \"title\": title,\r\n                \"description\": description,\r\n                \"isCompleted\": isCompleted\r\n            }, \r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: TASK_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: TASK_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteTask = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: TASK_DELETE_REQUEST })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/task-delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: TASK_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: TASK_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport { TASK_DETAILS_RESET } from '../constants/taskConstants';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { taskDetails, updateTask, deleteTask } from '../actions/taskActions';\r\n\r\nconst CardComponent = ({ myId, myColor, myTitle, myDescription, isCompleted }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const isCompletedHandler = () => {\r\n        dispatch(updateTask(\r\n            myId, \r\n            myTitle, \r\n            myDescription, \r\n            !isCompleted\r\n        ))\r\n    }\r\n\r\n    const updateHandler = () => {\r\n        dispatch({type: TASK_DETAILS_RESET})\r\n        dispatch(taskDetails(myId))\r\n        history.push(`/update/${myId}/`)\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(deleteTask(myId))\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <Card\r\n                style={{ \r\n                    borderTop: `3px solid ${myColor}`,\r\n                    opacity: `${isCompleted ? 0.5 : 1}`\r\n                }}\r\n                className=\"rounded h-100\"\r\n            >\r\n                <Card.Body>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <Card.Title\r\n                            className=\"text-dark\"\r\n                            style={{ textDecoration: `${isCompleted ? 'line-through' : ''}` }}\r\n                        >\r\n                            {myTitle}\r\n                        </Card.Title>\r\n                        <i \r\n                            className=\"fas fa-eye\"\r\n                            style={{ color: myColor, cursor: 'pointer' }}\r\n                            onClick={() => isCompletedHandler()}\r\n                        ></i>\r\n                    </div>\r\n                    <Card.Text\r\n                        className=\"text-dark\"\r\n                        style={{ textDecoration: `${isCompleted ? 'line-through' : ''}` }}\r\n                    >\r\n                        {myDescription}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer className=\"d-flex justify-content-end\">\r\n                    <button className=\"btn\" onClick={() => updateHandler()}>\r\n                        <i className=\"fas fa-pen\" style={{ color: myColor }}></i>\r\n                    </button>\r\n\r\n                    <button className=\"btn\" onClick={() => deleteHandler()}>\r\n                        <i className=\"fas fa-trash-alt\" style={{ color: myColor }}></i>\r\n                    </button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport { listTasks } from '../actions/taskActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport CardComponent from '../components/CardComponent'\r\n\r\nconst List = ({ history }) => {\r\n\r\n    const colors = [\r\n        '#F5365C',\r\n        '#2DCE89',\r\n        '#5E72E4',\r\n        '#11CDEF',\r\n        '#F7E200',\r\n        '#FB6340',\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const taskList = useSelector(state => state.taskList)\r\n    const { error, loading, tasks } = taskList\r\n\r\n    const taskCreate = useSelector(state => state.taskCreate)\r\n    const { success: successCreate } = taskCreate\r\n\r\n    const taskUpdate = useSelector(state => state.taskUpdate)\r\n    const { success: successUpdate } = taskUpdate\r\n\r\n    const taskDelete = useSelector(state => state.taskDelete)\r\n    const { success: successDelete } = taskDelete\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            dispatch(listTasks())\r\n        }\r\n    }, [dispatch, history, userInfo, successCreate, successUpdate, successDelete])\r\n\r\n    return (\r\n        <>\r\n            <header className=\"text-center py-5\">\r\n                <h1 className=\"pb-5\">TODO LIST</h1>\r\n                <Link className=\"btn createTodoBtn\" to='/create'>\r\n                    Create New Todo\r\n                </Link>\r\n                <br /><br />\r\n                <button className=\"btn createTodoBtn\" onClick={logoutHandler}>Logout</button>\r\n            </header>   \r\n            <section className=\"container py-5\">\r\n                { \r\n                    loading\r\n                        ? <Loader />\r\n                        : error\r\n                            ? <Message variant=\"danger\">{error}</Message>\r\n                            : (\r\n                                <>\r\n                                    {tasks.length === 0 && <Message variant=\"danger\">No Results Found!</Message>}\r\n                                    <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n                                        {tasks.map((task, index) => (\r\n                                            <CardComponent \r\n                                                key={task.id}\r\n                                                myId={task.id}\r\n                                                myColor={colors[index%6]}\r\n                                                myTitle={task.title}\r\n                                                myDescription={task.description}\r\n                                                isCompleted={task.isCompleted}\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createTask } from '../actions/taskActions';\r\n\r\nconst Create = ({ history }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createTask(title, description))\r\n        setTitle('')\r\n        setDescription('')\r\n        history.push('/tasks')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <header className=\"text-center py-5\">\r\n                <h1 className=\"pb-5\">TODO LIST</h1>\r\n                <Link className=\"btn createTodoBtn\" to=\"/tasks\">\r\n                    Go Back\r\n                </Link>\r\n            </header>\r\n            <section className=\"container py-5 d-flex justify-content-center\">\r\n                <Form className=\"createForm\" onSubmit={submitHandler}>\r\n                    <Form.Group className=\"mb-4\" controlId=\"exampleFrom.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Title\"\r\n                            required\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-5\" controlId=\"exampleFrom.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            placeholder=\"Description\"\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn submitBtn\">Submit</button>\r\n                    </div>\r\n                </Form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {taskDetails as taskDetailsAction, updateTask } from '../actions/taskActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { TASK_DETAILS_RESET } from '../constants/taskConstants'\r\n\r\nconst Update = ({ history, match }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [isCompleted, setIsCompleted] = useState(false)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const taskDetails = useSelector(state => state.taskDetails)\r\n    const { error, loading, task } = taskDetails\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (title === '') {\r\n            alert('Title Required')\r\n        } else {\r\n            dispatch(updateTask(\r\n                match.params.id,\r\n                title,\r\n                description,\r\n                isCompleted,\r\n            ))\r\n            setTitle('')\r\n            setDescription('')\r\n            setIsCompleted(false)\r\n            history.push('/tasks')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/')\r\n        }\r\n        if (!task || !task.title) {\r\n            dispatch({type: TASK_DETAILS_RESET})\r\n            dispatch(taskDetailsAction(match.params.id))\r\n        } else {\r\n            setTitle(task.title)\r\n            setDescription(task.description)\r\n            setIsCompleted(task.isCompleted)\r\n        }\r\n    }, [dispatch, task, match.params.id, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <header className=\"text-center py-5\">\r\n                <h1 className=\"pb-5\">TODO LIST</h1>\r\n                <Link className=\"btn createTodoBtn\" to=\"/tasks\">\r\n                    Go Back\r\n                </Link>\r\n            </header>\r\n            <section className=\"container py-5 d-flex justify-content-center\">\r\n                {\r\n                    loading\r\n                        ? <Loader />\r\n                        : error\r\n                            ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Form className=\"createForm\" onSubmit={submitHandler}>\r\n                                    <Form.Group className=\"mb-4\" controlId=\"exampleFrom.ControlInput1\">\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Title\"\r\n                                            required\r\n                                            value={title}\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-5\" controlId=\"exampleFrom.ControlTextarea1\">\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"textarea\"\r\n                                            rows={3}\r\n                                            placeholder=\"Description\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-5\" controlId=\"formBasicCheckbox\">\r\n                                        <Form.Check\r\n                                            type=\"checkbox\"\r\n                                            label=\"isCompleted\"\r\n                                            checked={isCompleted}\r\n                                            onChange={(e) => setIsCompleted(!isCompleted)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <div className=\"text-center\">\r\n                                        <button type=\"submit\" className=\"btn submitBtn\">Submit</button>\r\n                                    </div>\r\n                                </Form>\r\n                            )\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Update\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"text-center\">\r\n            &copy; {new Date().getFullYear()} All rights reserved.\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Login from './screens/Login'\nimport Register from './screens/Register'\nimport List from './screens/List'\nimport Create from './screens/Create'\nimport Update from './screens/Update'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Login} exact />\n          <Route path=\"/register\" component={Register} exact />\n          <Route path=\"/tasks\" component={List} exact />\n          <Route path=\"/create\" component={Create} exact />\n          <Route path=\"/update/:id\" component={Update} />\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}